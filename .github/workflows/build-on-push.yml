name: Build FFmpeg on push
on:
  push:
    branches:
      - main
      
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Delete Older Pre-release
        uses: dev-drprasad/delete-older-releases@v0.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          keep_latest: 1
          delete_tags: true
          delete_tag_pattern: a
          
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 1
          
      - name: Install dependencies
        run: ./dependencies.sh
        
      - name: Move ffmpeg-windows-build-helpers
        run: mv -v ./ffmpeg-windows-build-helpers/* ./
        
      - name: Compile FFmpeg using ffmpeg-windows-build-helpers
        run: ./cross_compile_ffmpeg.sh --ffmpeg-source-dir=$GITHUB_WORKSPACE/ffmpeg-source --gcc-cpu-count=2 --disable-nonfree=y --sandbox-ok=y --compiler-flavors=win64
        
      - name: 7-Zip FFmpeg win64 GPL
        working-directory: ffmpeg-source
        run: 7z a ffmpeg-win64-gpl.7z ffmpeg.exe ffprobe.exe ffplay.exe -mx9
        
      - name: Upload FFmpeg win64 GPL
        uses: actions/upload-artifact@v2
        with:
          name: ffmpeg-win64-gpl
          path: ffmpeg-source/ffmpeg-win64-gpl.7z
          
      - name: Upload x264 win64
        uses: actions/upload-artifact@v2
        with:
          name: x264-win64
          path: sandbox/cross_compilers/mingw-w64-x86_64/x86_64-w64-mingw32/bin/x264.exe
          
      - name: Upload x264 win64 all bitdepth
        uses: actions/upload-artifact@v2
        with:
          name: x264-win64-all-bitdepth
          path: sandbox/win64/x264_all_bitdepth/x264.exe
          
      - name: Upload x265 win64
        uses: actions/upload-artifact@v2
        with:
          name: x265-win64
          path: sandbox/cross_compilers/mingw-w64-x86_64/x86_64-w64-mingw32/bin/x265.exe
          
      - name: Upload x265 win64 all bitdepth
        uses: actions/upload-artifact@v2
        with:
          name: x265-win64-all-bitdepth
          path: sandbox/win64/x265_all_bitdepth/8bit/x265.exe
          
      - name: Get current FFmpeg git commit SHA & date
        id: git-sha-date
        working-directory: ffmpeg-source
        run: |
          echo "::set-output name=git-sha::$(git rev-parse --short HEAD)"
          echo "::set-output name=git-date::$(git log -1 --format=%ci)"
          
    outputs:
      git-sha: ${{ steps.git-sha-date.outputs.git-sha }}
      git-date: ${{ steps.git-sha-date.outputs.git-date }}
      
  release:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Download all builds
        uses: actions/download-artifact@v2
        
      - name: Rename archive to include git commit SHA
        working-directory: ffmpeg-win64-gpl
        run: mv ffmpeg-win64-gpl.7z ffmpeg-${{needs.build.outputs.git-sha}}-win64-gpl.7z
        
      - name: Get current date & time
        id: date-time
        run: |
          echo "::set-output name=date-time::$(date +'%Y-%m-%d %H:%M')"
          echo "::set-output name=date-time-tag::$(date +'%Y-%m-%d-%H-%M')"
          
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.date-time.outputs.date-time }}
          tag_name: ${{ steps.date-time.outputs.date-time-tag }}
          body: FFmpeg GPL git-${{ needs.build.outputs.git-sha }} in ${{ needs.build.outputs.git-date }} built on ${{ steps.date-time.outputs.date-time }}
          files: ffmpeg-win64-gpl/ffmpeg-${{ needs.build.outputs.git-sha }}-win64-gpl.7z
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}